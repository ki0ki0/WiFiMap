<UserControl x:Class="WiFiMapCore.Views.ScanView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:effects="clr-namespace:WPFHeatMap.Effects"
             xmlns:heatMap="clr-namespace:WiFiMapCore.HeatMap"
             xmlns:viewModels="clr-namespace:WiFiMapCore.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignData viewModels:ResultVm}">

    <UserControl.Resources>
        <viewModels:BooleanToColorConverter x:Key="IntensityToColorConverter" />
        <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate" ItemsSource="{Binding Children}"
                                  DataType="viewModels:NetworkVm">
            <StackPanel Orientation="Horizontal">
                <CheckBox Focusable="False" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <VisualBrush x:Key="PaletteBrush">
            <VisualBrush.Visual>
                <Rectangle Width="256" Height="1">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="#00ffa0a0" Offset="0.0" />
                            <GradientStop Color="#c0ffffa0" Offset="0.35" />
                            <GradientStop Color="#c000ff00" Offset="1.0" />
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </VisualBrush.Visual>
        </VisualBrush>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel LastChildFill="True"
                       Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowUp" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10"
                      DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0"
                      SnapsToDevicePixels="True" />
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel LastChildFill="True"
                       Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowDown" StrokeThickness="1" Fill="Gray" Data="M 5,5 L 10,10 L 15,5 L 5,5"
                      DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0"
                      SnapsToDevicePixels="True" />
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="350"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=allNetworks}" Background="{x:Static SystemColors.MenuBrush}">All networks:</Label>
        <TreeView Grid.Column="0" Grid.Row="1" x:Name="allNetworks" ItemsSource="{Binding Networks}"
                  ItemTemplate="{StaticResource CheckBoxItemTemplate}" HorizontalAlignment="Stretch">
            <TreeView.Resources>    
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.Resources>
            <TreeView.InputBindings>
                <KeyBinding Key="Space" Command="{Binding ElementName=allNetworks, Path=SelectedItem.SpacePressed}"/>
            </TreeView.InputBindings>
        </TreeView>
        <GridSplitter Grid.Column="1" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch"/>
        
        <DockPanel Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Stretch">
            <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Background="{x:Static SystemColors.MenuBrush}">
                <Label VerticalAlignment="Center">Zoom:</Label>
                <Slider VerticalAlignment="Center" Minimum="{Binding ScaleFactorMin}"
                        Maximum="{Binding ScaleFactorMax}"
                        SmallChange="0.1" Value="{Binding ScaleFactor}" HorizontalAlignment="Stretch" />
            </DockPanel>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                          CanContentScroll="True">
                <Grid Background="Transparent">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseWheel">
                            <b:InvokeCommandAction Command="{Binding Wheel}" PassEventArgsToCommand="True" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding ScaleFactor}" ScaleY="{Binding ScaleFactor}" />
                    </Grid.LayoutTransform>

                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">

                        <Image Source="{Binding Image}" Stretch="None" HorizontalAlignment="Left"
                               VerticalAlignment="Top">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseUp">
                                    <b:InvokeCommandAction Command="{Binding Click}" PassEventArgsToCommand="True" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Image>

                        <heatMap:HeatMap PointsSource="{Binding HeatPoints}" HorizontalAlignment="Left"
                                         VerticalAlignment="Top">
                            <heatMap:HeatMap.Effect>
                                <effects:HeatColorizer Palette="{StaticResource PaletteBrush}" />
                            </heatMap:HeatMap.Effect>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseUp">
                                    <b:InvokeCommandAction Command="{Binding Click}" PassEventArgsToCommand="True" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </heatMap:HeatMap>

                        <ItemsControl ItemsSource="{Binding HeatPoints}" HorizontalAlignment="Left"
                                      VerticalAlignment="Top">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                    <Setter Property="Canvas.Left" Value="{Binding X}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="viewModels:HeatPointVm">
                                    <Ellipse Width="10" Height="10" Fill="{Binding IsMissing, Converter={StaticResource IntensityToColorConverter}}" Margin="-5,-5,0,0" >
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="MouseEnter">
                                                <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, Path=DataContext.ScanPointHover}" PassEventArgsToCommand="True" />
                                            </b:EventTrigger>

                                            <b:EventTrigger EventName="MouseUp">
                                                <b:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, Path=DataContext.ScanPointClick}" PassEventArgsToCommand="True" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </Ellipse>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                    </Grid>
                </Grid>
            </ScrollViewer>
        </DockPanel>
        
        
        <GridSplitter Grid.Column="3" Grid.RowSpan="2" Width="5" HorizontalAlignment="Stretch"/>
        
        <Label Grid.Column="4" Grid.Row="0" Target="{Binding ElementName=lv}" Background="{x:Static SystemColors.MenuBrush}">Networks at last selected point:</Label>
        <ListView x:Name='lv' Grid.Column="4"  Grid.Row="1" ItemsSource="{Binding Details}"
                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
            <ListView.View>
                <GridView AllowsColumnReorder="True">
                    <GridViewColumn Header="Ssid">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="viewModels:NetworkInfoDetailsVm">
                                <TextBlock Text="{Binding Ssid, Mode=OneTime}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Mac" DisplayMemberBinding="{Binding Mac, Mode=OneTime}" />
                    <GridViewColumn Header="Channel" DisplayMemberBinding="{Binding Channel, Mode=OneTime}" />
                    <GridViewColumn Header="RSSI" DisplayMemberBinding="{Binding Rssi, Mode=OneTime}" />
                    <GridViewColumn Header="LinkQuality" DisplayMemberBinding="{Binding LinkQuality, Mode=OneTime}" />
                </GridView>
            </ListView.View>
        </ListView>
        
        <ContentControl Grid.Column="0" Grid.ColumnSpan="5" Grid.RowSpan="2" Content="{Binding ProgressVm}" />
    </Grid>
</UserControl>